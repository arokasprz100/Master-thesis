user@host:~/test$ valgrind --track-origins=yes --leak-check=full ./a.out
==127== Memcheck, a memory error detector
==127== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==127== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==127== Command: ./a.out
==127==
==127== Conditional jump or move depends on uninitialised value(s)
==127==    at 0x109200: main (memcheck_code.cpp:7)
==127==  Uninitialised value was created by a stack allocation
==127==    at 0x1091E9: main (memcheck_code.cpp:3)
==127==
Value: 10
==127==
==127== HEAP SUMMARY:
==127==     in use at exit: 40 bytes in 1 blocks
==127==   total heap usage: 3 allocs, 2 frees, 76,840 bytes allocated
==127==
==127== 40 bytes in 1 blocks are definitely lost in loss record 1 of 1
==127==    at 0x483C583: operator new[](unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==127==    by 0x109272: main (memcheck_code.cpp:13)
==127==
==127== LEAK SUMMARY:
==127==    definitely lost: 40 bytes in 1 blocks
==127==    indirectly lost: 0 bytes in 0 blocks
==127==      possibly lost: 0 bytes in 0 blocks
==127==    still reachable: 0 bytes in 0 blocks
==127==         suppressed: 0 bytes in 0 blocks
==127==
==127== For lists of detected and suppressed errors, rerun with: -s
==127== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)